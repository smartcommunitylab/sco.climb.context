image: docker:latest
services:
  - docker:dind

stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay
  CONTAINER_PROD_IMAGE: smartcommunitylab/climb:$CI_COMMIT_SHORT_SHA
  CONTAINER_DEV_IMAGE: smartcommunitylab/climb:dev-$CI_COMMIT_SHORT_SHA
  CONTAINER_IMAGE: smartcommunitylab/climb:latest

build_prod:
  stage: build
  script:
    - sed -i -e 's/configService.DEVELOPMENT = true/configService.DEVELOPMENT = false/g' ./sco.climb.domain/src/main/resources/static/game-dashboard/js/services/confSrv.js
    - docker login -u $DHUB_USER -p $DHUB_PASS
    - DOCKER_BUILDKIT=1 docker build -f Dockerfile -t $CONTAINER_PROD_IMAGE -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_PROD_IMAGE
  only:
    - prod

build_dev:
  stage: build
  script:
    - docker login -u $DHUB_USER -p $DHUB_PASS
    - DOCKER_BUILDKIT=1 docker build -f Dockerfile -t $CONTAINER_DEV_IMAGE -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
  only:
    - dev

deploy_prod:
  stage: deploy
  image: smartcommunitylab/kubectl-alpine:latest
  environment:
    name: dslab
  script:
    - echo "deploy"
    - kubectl -n climb-prod set image deployments/climb climb-domain=$CONTAINER_PROD_IMAGE
    - kubectl -n climb-prod rollout status deployment climb
  only:
    - prod

deploy_dev:
  stage: deploy
  image: smartcommunitylab/kubectl-alpine:latest
  environment:
    name: dslab
  script:
    - echo "deploy"
    - kubectl -n climb-dev set image deployments/climb climb-domain=$CONTAINER_DEV_IMAGE
    - kubectl -n climb-dev rollout status deployment climb
  only:
    - dev
