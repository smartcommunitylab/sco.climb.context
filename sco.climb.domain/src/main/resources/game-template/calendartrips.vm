#set( $H = '#' )
#set( $S = '$' )

package eu.trentorise.game.model
import eu.trentorise.game.core.Utility;

global Double const_zi_solo_bonus;
global Utility utils;

// ****************************************** global functions 	
function Double getDistanceByMode(String mode) {
	//constants for mode distances
	Double const_pandr_distance = $params.const_pandr_distance#[[.0]]#;
	Double const_bus_distance = $param.const_bus_distance#[[.0]]#;
	Double const_zeroimpact_distance = $param.const_zeroimpact_distance#[[.0]]#;
	
	Double ret = 0.0;
	
	if(mode.equals(\"bus\"))
		ret = const_bus_distance;
	else if(mode.equals(\"pandr\"))
		ret = const_pandr_distance;
	else if(mode.equals(\"zeroImpact_solo\") || mode.equals(\"zeroImpact_wAdult\"))
		ret = const_zeroimpact_distance;
	else // absent or car or pedibus
		ret = 0.0;
		
	return ret;
}

function Double getMeteoBonus(String meteo) {
	//constants for meteo bonuses
	Double const_cloudy_bonus = $params.const_cloudy_bonus#[[.0]]#;
	Double const_rain_bonus = $params.const_rain_bonus#[[.0]]#;
	Double const_snow_bonus = $params.const_snow_bonus#[[.0]]#;
	
	Double ret = 0.0;
	
	if(meteo.equals(\"cloudy\"))
		ret = const_cloudy_bonus;
	else if(meteo.equals(\"rain\"))
		ret = const_rain_bonus;
	else if(meteo.equals(\"snow\"))
		ret = const_snow_bonus;
	else // sunny
		ret = 0.0;
	
	return ret;
}

rule \"participation update\"
when
	Action(id == \"PlayerCalendarTrip\")
    InputData( $Smode : data[\"mode\"] != null, $Sdate : data[\"school-date\"] != null)
    $Spart : PointConcept(name == \"participation_count\")
then
	// here I make sure to set correctly  the flag for participation in the current day
	if ($Spart.getPeriodCurrentScore(\"daily\") == 0) {
		utils.log(\"apply participation update\");
		$Spart.setScore($Spart.getScore() + 1d);
		update($Spart);
		insert(new UpdateTeams(\"participation\"));
	}
end

rule \"participation update propagation\"
when
	Member($Smode : inputData[\"mode\"] != null, inputData[\"school-date\"] != null)
	Propagation(action == \"participation\")
    Player($SplayerId : id, team == true)
    $Spart : PointConcept(name == \"participation_count\")
then
	utils.log(\"apply participation update propagation\");
	// here I make sure I update the participation count for the team in the current day
	$Spart.setScore($part.getScore() + 1d);
	update($Spart);
    insert(new UpdateTeams(\"participation\"));
end

rule \"absence update\"
when
	Action(id == \"PlayerCalendarTrip\")
    InputData( $Smode : data[\"mode\"] != null, $Smode == \"absent\", $Sdate : data[\"school-date\"] != null)
    $Sabsence : PointConcept(name == \"absence_count\")
then
	utils.log(\"apply absence update\");
	$Sabsence.setScore($Sabsence.getScore() + 1d);
	update($Sabsence)
    insert(new UpdateTeams());
end

rule \"trip absence update propagation\"
when
	Member($Smode : inputData[\"mode\"] != null, $Smode == \"absent\", inputData[\"school-date\"] != null)
    Player($SplayerId : id, team == true)
    $Sabsence : PointConcept(name == \"absence_count\")
then
	utils.log(\"apply absence update propagation\");
	$Sabsence.setScore($Sabsence.getScore() + 1d);
	update($Sabsence)
    insert(new UpdateTeams());
end

rule \"trip mode update\"
when 
    Action(id == \"PlayerCalendarTrip\")
    InputData( $Smode : data[\"mode\"] != null, $Smode != \"absent\", $Smeteo : data[\"meteo\"] != null, $Sdate : data[\"school-date\"] != null )
    $Stot_dist : PointConcept(name == \"total_distance\")
    $Stot_trips : PointConcept(name == \"total_trips\")
    $Smode_dist : PointConcept(name == (String)$Smode + \"_distance\")
    $Smode_trips : PointConcept(name == (String)$Smode + \"_trips\")
    $Sbonus_dist : PointConcept(name == \"bonus_distance\")
then
	String myMode = (String)$Smode;
	String myMeteo = (String)$Smeteo;
	Double meteoBonus = 0.0;
	Double distance = 0.0;
		
	if (myMode.startsWith(\"zeroImpact\") || myMode.equals(\"pedibus\")) {
		meteoBonus = getMeteoBonus(myMeteo);
		if (meteoBonus > 0.0) {
			utils.log(\"apply meteo Bonus for \" + myMeteo + \" weather\");
		}
		if (myMode.equals(\"zeroImpact_solo\")) {
			utils.log(\"apply children independent mobility Bonus\");
			meteoBonus += const_zi_solo_bonus;
		}
		$Sbonus_dist.setScore($bonus_dist.getScore() + meteoBonus);
	}
	if (! myMode.equals(\"pedibus\")) {
		utils.log(\"apply \" + myMode + \" update\");		
		distance = getDistanceByMode(myMode);
		$Smode_dist.setScore($mode_dist.getScore() + distance);
		$Smode_trips.setScore($mode_trips.getScore() + 1d); 
		$Stot_trips.setScore($tot_trips.getScore() + 1d);
	}
	
	Double totalUpdate = distance + meteoBonus;
	$Stot_dist.setScore($Stot_dist.getScore() + totalUpdate);  
    
    update($Sbonus_dist);
    update($Smode_dist);
    update($Smode_trips);
    update($Stot_dist);
    update($Stot_trips);

    insert(new UpdateTeams());
end


rule \"trip mode update propagation\"
when
    Member($Smode : inputData[\"mode\"] != null, $Smode != \"absent\", $Smeteo : inputData[\"meteo\"] != null, $Sdate : inputData[\"school-date\"] != null)
    Player($playerId : id, team == true)
    $Stot_dist : PointConcept(name == \"total_distance\")
    $Stot_trips : PointConcept(name == \"total_trips\")
    $Smode_dist : PointConcept(name == (String)$Smode + \"_distance\")
    $Smode_trips : PointConcept(name == (String)$Smode + \"_trips\")
    $Sbonus_dist : PointConcept(name == \"bonus_distance\")
then
  utils.log(\"apply trip mode update propagation\");
	String myMode = (String)$Smode;
	String myMeteo = (String)$Smeteo;
	Double meteoBonus = 0.0;
	Double distance = 0.0;
	
	if (myMode.startsWith(\"zeroImpact\") || myMode.equals(\"pedibus\")) {
		meteoBonus = getMeteoBonus(myMeteo);
		if (myMode.equals(\"zeroImpact_solo\")) {
			meteoBonus += const_zi_solo_bonus;
		}
		$bonus_dist.setScore($bonus_dist.getScore() + meteoBonus);
	}
	if (! myMode.equals(\"pedibus\")) {
		distance = getDistanceByMode(myMode);
		$mode_dist.setScore($mode_dist.getScore() + distance);
		$mode_trips.setScore($mode_trips.getScore() + 1d);
		$tot_trips.setScore($tot_trips.getScore() + 1d);
	}
	
	Double totalUpdate = distance + meteoBonus;
	$Stot_dist.setScore($Stot_dist.getScore() + totalUpdate);
    
    update($Sbonus_dist);
    update($Smode_dist);
    update($Smode_trips);
    update($Stot_dist);
    update($Stot_trips);

    insert(new UpdateTeams());
end